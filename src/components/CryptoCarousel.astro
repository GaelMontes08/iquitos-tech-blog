---
import { getCryptoData } from '@/lib/crypto.ts';

// Define the type for cryptoData items
type CryptoItem = {
  symbol: string;
  quote: {
    USD: {
      price: number;
      percent_change_24h: number;
    };
  };
};

let cryptoData: CryptoItem[] = [];
try {
  cryptoData = await getCryptoData();
} catch (error) {
  console.error('Failed to load crypto data:', error);
}
---

<section class="w-full bg-[#131313] border-y border-[#313131] py-4 overflow-hidden">
  <div class="crypto-carousel">
    <div class="crypto-track">
      {cryptoData.map((crypto) => (
        <div class="crypto-item">
          <span class="crypto-symbol">{crypto.symbol}</span>
          <span class="crypto-price">
            ${crypto.quote.USD.price.toLocaleString('en-US', {
              minimumFractionDigits: 2,
              maximumFractionDigits: 2
            })}
          </span>
          <span class={`crypto-change ${crypto.quote.USD.percent_change_24h >= 0 ? 'positive' : 'negative'}`}>
            {crypto.quote.USD.percent_change_24h >= 0 ? '+' : ''}
            {crypto.quote.USD.percent_change_24h.toFixed(2)}%
          </span>
        </div>
      ))}
      <!-- Duplicate items for seamless loop -->
      {cryptoData.map((crypto) => (
        <div class="crypto-item">
          <span class="crypto-symbol">{crypto.symbol}</span>
          <span class="crypto-price">
            ${crypto.quote.USD.price.toLocaleString('en-US', {
              minimumFractionDigits: 2,
              maximumFractionDigits: 2
            })}
          </span>
          <span class={`crypto-change ${crypto.quote.USD.percent_change_24h >= 0 ? 'positive' : 'negative'}`}>
            {crypto.quote.USD.percent_change_24h >= 0 ? '+' : ''}
            {crypto.quote.USD.percent_change_24h.toFixed(2)}%
          </span>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .crypto-carousel {
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
  }

  .crypto-track {
    display: inline-flex;
    animation: scroll 60s linear infinite;
    gap: 2rem;
  }

  .crypto-item {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 0.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    white-space: nowrap;
    min-width: fit-content;
  }

  .crypto-symbol {
    font-weight: bold;
    color: skyblue;
    font-size: 0.875rem;
  }

  .crypto-price {
    color: white;
    font-size: 0.875rem;
    font-weight: 600;
  }

  .crypto-change {
    font-size: 0.75rem;
    font-weight: 500;
  }

  .crypto-change.positive {
    color: #10b981;
  }

  .crypto-change.negative {
    color: #ef4444;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .crypto-track:hover {
    animation-play-state: paused;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .crypto-item {
      padding: 0 0.75rem;
      gap: 0.375rem;
    }
    
    .crypto-symbol,
    .crypto-price {
      font-size: 0.75rem;
    }
    
    .crypto-change {
      font-size: 0.6875rem;
    }
  }
</style>