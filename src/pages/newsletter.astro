---
import Layout from '../layouts/Layout.astro';

const pageTitle = 'Suscríbete al Newsletter | Iquitos Tech';
const pageDescription = 'Únete a nuestra newsletter semanal y recibe las mejores noticias de tecnología y gaming directamente en tu inbox.';

// Get Google Client ID from environment variables
const googleClientId = import.meta.env.PUBLIC_GOOGLE_CLIENT_ID;

// Get reCAPTCHA site key from environment variables
const recaptchaSiteKey = import.meta.env.PUBLIC_RECAPTCHA_SITE_KEY;

export const prerender = true;
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  canonical="https://iquitostech.com/newsletter"
  type="website"
  urlType="page"
>
  <div class="h-[750px] flex items-center justify-center p-4">
    
    <!-- Newsletter Card -->
    <div id="newsletter-card" class="w-full max-w-md bg-transparent border border-white/10 rounded-2xl shadow-xl p-8 space-y-6">
      
      <!-- Header -->
      <div class="text-center space-y-2">
        <h1 class="text-2xl font-bold text-white">
          Suscríbete a nuestra Newsletter
        </h1>
        <p class="text-sm text-gray-400 leading-relaxed">
          Completa el formulario manualmente o usa tu cuenta de Google para una suscripción rápida.
        </p>
      </div>

      <!-- Manual Form -->
      <form id="manual-form" class="space-y-4">
        
        <!-- Name Input -->
        <div>
          <label for="fullname" class="sr-only">Nombre completo</label>
          <input
            type="text"
            id="fullname"
            name="fullname"
            placeholder="Nombre completo"
            required
            class="w-full h-12 px-4 rounded-lg bg-white/5 border border-white/10 text-white placeholder-gray-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#2847d7] focus-visible:border-[#2847d7]"
          />
        </div>

        <!-- Email Input -->
        <div>
          <label for="email" class="sr-only">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            placeholder="Email"
            required
            class="w-full h-12 px-4 rounded-lg bg-white/5 border border-white/10 text-white placeholder-gray-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#2847d7] focus-visible:border-[#2847d7]"
          />
        </div>

        <!-- Subscribe Button -->
        <button
          type="submit"
          id="manual-submit"
          class="w-full h-12 bg-[#2847d7] hover:bg-[#2847d7]/90 text-white font-medium rounded-lg transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#2847d7] focus-visible:ring-offset-2 focus-visible:ring-offset-gray-900 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          <span id="manual-submit-text">Suscribirse</span>
          <span id="manual-submit-loading" class="hidden">Suscribiendo...</span>
        </button>

      </form>

      <!-- Divider -->
      <div class="flex items-center space-x-4">
        <div class="flex-1 h-px bg-white/10"></div>
        <span class="text-xs text-gray-500 uppercase tracking-wider">o</span>
        <div class="flex-1 h-px bg-white/10"></div>
      </div>

      <!-- Google Sign In Button -->
      <button
        type="button"
        id="google-signin-btn"
        class="w-full h-12 flex items-center justify-center space-x-3 rounded-lg border border-white/20 text-white hover:bg-white/5 transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#2847d7] focus-visible:ring-offset-2 focus-visible:ring-offset-gray-900 disabled:opacity-50 disabled:cursor-not-allowed"
      >
        <!-- Google G Icon -->
        <svg aria-hidden="true" class="w-5 h-5" viewBox="0 0 24 24">
          <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
          <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
          <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
          <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
        </svg>
        <span id="google-signin-text" class="font-medium">Continuar con Google</span>
        <span id="google-signin-loading" class="hidden font-medium">Autenticando...</span>
      </button>

      <!-- Terms and Privacy -->
      <p class="text-xs text-gray-500 text-center leading-relaxed">
        Al continuar aceptas los 
        <a href="/privacy" class="text-[#2847d7] hover:underline focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-[#2847d7] rounded">Términos</a> 
        y la 
        <a href="/privacy" class="text-[#2847d7] hover:underline focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-[#2847d7] rounded">Política de Privacidad</a>.
      </p>

    </div>

    <!-- Success State (Hidden by default) -->
    <div id="success-card" class="hidden w-full max-w-md bg-transparent border border-white/10 rounded-2xl shadow-xl p-8 text-center space-y-6">
      
      <!-- Success Icon -->
      <div class="flex justify-center">
        <div class="w-16 h-16 bg-green-500/20 rounded-full flex items-center justify-center">
          <svg class="w-8 h-8 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
          </svg>
        </div>
      </div>

      <!-- Success Message -->
      <div class="space-y-2">
        <h2 class="text-2xl font-bold text-white">
          ¡Gracias por suscribirte!
        </h2>
        <p class="text-gray-400">
          Recibirás nuestro newsletter semanal en
        </p>
        <p id="success-email" class="text-[#2847d7] font-medium">
          tu@email.com
        </p>
        <p class="text-sm text-gray-500 mt-4">
          Revisa tu bandeja de entrada para confirmar la suscripción.
        </p>
      </div>

      <!-- Back to Site -->
      <a 
        href="/" 
        class="inline-flex items-center justify-center w-full h-12 bg-[#2847d7] hover:bg-[#2847d7]/90 text-white font-medium rounded-lg transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#2847d7] focus-visible:ring-offset-2 focus-visible:ring-offset-gray-900"
      >
        Volver al inicio
      </a>

    </div>

  </div>

  <!-- Google Sign-In SDK -->
  <script src="https://accounts.google.com/gsi/client" async defer></script>
  
  <!-- reCAPTCHA v3 SDK -->
  {recaptchaSiteKey && (
    <script src={`https://www.google.com/recaptcha/api.js?render=${recaptchaSiteKey}`} async defer></script>
  )}

  <script define:vars={{ googleClientId, recaptchaSiteKey }}>
    // Google OAuth configuration from environment variables
    const GOOGLE_CLIENT_ID = googleClientId;
    const RECAPTCHA_SITE_KEY = recaptchaSiteKey;
    const REDIRECT_URI = window.location.origin + '/newsletter';

    // Global variables
    let googleClient;

    // Initialize Google OAuth when SDK loads
    window.addEventListener('load', async () => {
      // Wait for Google SDK to load
      while (!window.google) {
        await new Promise(resolve => setTimeout(resolve, 100));
      }

      initializeGoogleOAuth();
      setupEventListeners();
    });

    function initializeGoogleOAuth() {
      try {
        // Check if Google Client ID is configured
        if (!GOOGLE_CLIENT_ID) {
          console.warn('⚠️ Google Client ID not configured');
          const googleBtn = document.getElementById('google-signin-btn');
          if (googleBtn) {
            googleBtn.disabled = true;
            googleBtn.innerHTML = '<span class="font-medium text-gray-500">Google Sign-In no disponible</span>';
          }
          return;
        }

        // Initialize Google OAuth client
        googleClient = window.google.accounts.oauth2.initCodeClient({
          client_id: GOOGLE_CLIENT_ID,
          scope: 'email profile',
          ux_mode: 'popup',
          callback: handleGoogleCallback,
        });

        console.log('✅ Google OAuth client initialized');
      } catch (error) {
        console.error('❌ Error initializing Google OAuth:', error);
      }
    }

    function setupEventListeners() {
      // Manual form submission
      const manualForm = document.getElementById('manual-form');
      if (manualForm) {
        manualForm.addEventListener('submit', handleManualSubmit);
      }

      // Google sign-in button
      const googleBtn = document.getElementById('google-signin-btn');
      if (googleBtn) {
        googleBtn.addEventListener('click', handleGoogleSignIn);
      }
    }

    async function handleManualSubmit(event) {
      event.preventDefault();
      
      const submitBtn = document.getElementById('manual-submit');
      const submitText = document.getElementById('manual-submit-text');
      const submitLoading = document.getElementById('manual-submit-loading');
      const fullnameInput = document.getElementById('fullname');
      const emailInput = document.getElementById('email');

      // Get form data
      const fullname = fullnameInput.value.trim();
      const email = emailInput.value.trim();

      // Basic validation
      if (!fullname || !email) {
        alert('Por favor, completa todos los campos.');
        return;
      }

      if (!isValidEmail(email)) {
        alert('Por favor, ingresa un email válido.');
        return;
      }

      // Show loading state
      submitBtn.disabled = true;
      submitText.classList.add('hidden');
      submitLoading.classList.remove('hidden');

      try {
        // Get reCAPTCHA token if available
        let recaptchaToken = null;
        if (RECAPTCHA_SITE_KEY && window.grecaptcha) {
          try {
            recaptchaToken = await window.grecaptcha.execute(RECAPTCHA_SITE_KEY, {
              action: 'newsletter_subscribe'
            });
            console.log('✅ reCAPTCHA token obtained');
          } catch (recaptchaError) {
            console.warn('⚠️ reCAPTCHA not available:', recaptchaError);
            // Continue without reCAPTCHA - it's optional
          }
        }

        // Split fullname into first and last name
        const nameParts = fullname.split(' ');
        const firstName = nameParts[0];
        const lastName = nameParts.slice(1).join(' ');

        // Prepare request data
        const requestData = {
          email: email,
          firstName: firstName,
          lastName: lastName,
          source: 'manual'
        };

        // Add reCAPTCHA token if available
        if (recaptchaToken) {
          requestData.recaptchaToken = recaptchaToken;
        }

        // Subscribe to newsletter
        const response = await fetch('/api/newsletter-subscribe', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(requestData),
        });

        const result = await response.json();

        if (result.success) {
          showSuccessState(email);
        } else {
          alert(result.message || 'Error al suscribirse. Inténtalo de nuevo.');
        }

      } catch (error) {
        console.error('Manual subscription error:', error);
        alert('Error de conexión. Inténtalo de nuevo más tarde.');
      } finally {
        // Reset loading state
        submitBtn.disabled = false;
        submitText.classList.remove('hidden');
        submitLoading.classList.add('hidden');
      }
    }

    function handleGoogleSignIn() {
      if (!googleClient) {
        alert('Google Sign-In no está disponible. Inténtalo más tarde.');
        return;
      }

      const signInBtn = document.getElementById('google-signin-btn');
      const signInText = document.getElementById('google-signin-text');
      const signInLoading = document.getElementById('google-signin-loading');

      // Show loading state
      signInBtn.disabled = true;
      signInText.classList.add('hidden');
      signInLoading.classList.remove('hidden');

      try {
        // Request authorization code
        googleClient.requestCode();
      } catch (error) {
        console.error('Google sign-in error:', error);
        alert('Error al iniciar sesión con Google. Inténtalo de nuevo.');
        
        // Reset loading state
        signInBtn.disabled = false;
        signInText.classList.remove('hidden');
        signInLoading.classList.add('hidden');
      }
    }

    async function handleGoogleCallback(response) {
      const signInBtn = document.getElementById('google-signin-btn');
      const signInText = document.getElementById('google-signin-text');
      const signInLoading = document.getElementById('google-signin-loading');

      try {
        if (response.code) {
          console.log('✅ Authorization code received');

          // Exchange code for user info and subscribe
          const apiResponse = await fetch('/api/google-oauth', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              code: response.code,
              redirectUri: REDIRECT_URI,
            }),
          });

          const result = await apiResponse.json();

          if (result.success) {
            console.log('✅ Google OAuth successful');
            showSuccessState(result.user.email);
          } else {
            console.error('❌ Google OAuth failed:', result.message);
            alert(result.message || 'Error al suscribirse con Google.');
          }
        } else {
          console.error('❌ No authorization code received');
          alert('Error en la autenticación con Google.');
        }
      } catch (error) {
        console.error('❌ Google callback error:', error);
        alert('Error de conexión con Google. Inténtalo de nuevo.');
      } finally {
        // Reset loading state
        signInBtn.disabled = false;
        signInText.classList.remove('hidden');
        signInLoading.classList.add('hidden');
      }
    }

    function showSuccessState(email) {
      const newsletterCard = document.getElementById('newsletter-card');
      const successCard = document.getElementById('success-card');
      const successEmail = document.getElementById('success-email');
      
      if (newsletterCard && successCard && successEmail) {
        successEmail.textContent = email;
        newsletterCard.classList.add('hidden');
        successCard.classList.remove('hidden');
      }
    }

    function isValidEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }
  </script>

  <style>
    /* Ensure proper focus styles */
    input:focus-visible {
      outline: none;
    }
    
    /* Custom disabled state for readonly inputs */
    input[readonly] {
      cursor: not-allowed;
    }
  </style>
</Layout>
