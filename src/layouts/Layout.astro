---
import Header from "@/components/Header.astro";
import SEO from "@/components/SEO.astro";
import Schema from "@/components/Schema.astro";
import "@/styles/global.css";
import '@fontsource-variable/onest';
import Footer from "@/components/Footer.astro";
import Analytics from '@vercel/analytics/astro';
import type { SEOProps } from '@/lib/seo';

export interface Props extends SEOProps {}

const seoProps = Astro.props as Props;
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        
        <!-- ViewTransition Optimizations -->
        <style>
          /* Smooth content transitions without ViewTransitions */
          @keyframes fadeIn {
            from { 
              opacity: 0; 
              transform: translateY(10px);
            }
            to { 
              opacity: 1; 
              transform: translateY(0);
            }
          }
          
          /* Critical CSS - Above the fold styles */
          * {
            box-sizing: border-box;
          }
          
          :root {
            font-family: 'Onest Variable', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            color-scheme: dark;
          }
          
          html {
            background-color: #131313;
          }
          
          body {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            min-height: 100vh;
            color: rgba(255, 255, 255, 0.9);
            line-height: 1.6;
          }
          
          /* Critical layout styles */
          .pt-16 { padding-top: 4rem; }
          .text-white { color: rgb(255 255 255); }
          .bg-gray-900 { background-color: rgb(17 24 39); }
          
          /* Performance optimizations */
          img, picture {
            contain: layout;
          }
          
          .group:hover .group-hover\\:scale-105,
          .group:hover .group-hover\\:scale-110 {
            transform: scale(1.05);
            will-change: transform;
          }
          
          /* Prevent layout shifts */
          [loading="lazy"] {
            content-visibility: auto;
          }
        </style>        
        
        <!-- Preconnect for faster resource loading -->
        <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="preconnect" href="https://www.googletagmanager.com" crossorigin>
        <link rel="preconnect" href="https://news.google.com" crossorigin>
        <link rel="preconnect" href="https://cms-iquitostech.com" crossorigin>
        <link rel="dns-prefetch" href="//iquitostech.wordpress.com">
        <link rel="dns-prefetch" href="//wp-content.com">
        
        <!-- Preload critical resources -->
        <link rel="preload" href="/_astro/onest-latin-400-normal.woff2" as="font" type="font/woff2" crossorigin>
        <link rel="preload" href="/_astro/onest-latin-700-normal.woff2" as="font" type="font/woff2" crossorigin>
        
        <!-- Optimized Onest Variable font loading -->
        <link rel="preload" href="https://fonts.googleapis.com/css2?family=Onest:wght@100..900&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
        <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Onest:wght@100..900&display=swap"></noscript>
        
        <!-- Load CSS asynchronously to prevent render blocking -->
        <link rel="preload" href="/_astro/about.DDFEh7yW.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
        <noscript><link rel="stylesheet" href="/_astro/about.DDFEh7yW.css"></noscript>
        
        <!-- SEO and Schema components -->
        <SEO {...seoProps} />
        <Schema {...seoProps} />
    </head>
    <body>
        
        <!-- Simplified skeleton loading script -->
        <script is:inline>
          // Simple skeleton content loading without ViewTransitions
          document.addEventListener('DOMContentLoaded', () => {
            const skeleton = document.getElementById('content-skeleton');
            const actualContent = document.getElementById('actual-content');
            
            if (skeleton && actualContent) {
              // Start with skeleton visible
              skeleton.style.display = 'block';
              actualContent.style.display = 'none';
              
              // Progressive content loading - natural page load timing
              setTimeout(() => {
                skeleton.style.display = 'none';
                actualContent.style.display = 'block';
                actualContent.style.animation = 'fadeIn 0.4s ease-in-out';
              }, 400); // Slightly longer for natural loading feel
            }
          });
        </script>
        
        <Header />
        <main class="pt-16 sm:pt-20 lg:pt-24">
            <slot />
        </main>
        <Footer />
        <Analytics />
        
        <!-- Optimized scripts at end of body for better ViewTransitions -->
        
        <!-- Google Analytics - Deferred Loading -->
        <script is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-XXGSVHTJJL"></script>
        <script is:inline>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', 'G-XXGSVHTJJL');
        </script>
        
        <!-- Optimized Iframe Accessibility Handler -->
        <script is:inline>
          // Global iframe accessibility handler
          let iframeTimeout;
          
          window.addIframeTitles = function() {
            clearTimeout(iframeTimeout);
            iframeTimeout = setTimeout(() => {
              const iframes = document.querySelectorAll('iframe:not([title])');
              iframes.forEach((iframe, index) => {
                const src = iframe.src || '';
                let title = 'Contenido embebido';
                
                if (src.includes('youtube')) title = 'Video de YouTube embebido';
                else if (src.includes('twitter') || src.includes('x.com')) title = 'Tweet embebido';
                else if (src.includes('facebook')) title = 'Publicación de Facebook';
                else if (src.includes('instagram')) title = 'Publicación de Instagram';
                else if (src.includes('tiktok')) title = 'Video de TikTok';
                else if (src.includes('google')) title = 'Servicio de Google';
                else if (src.includes('ads') || src.includes('doubleclick')) title = 'Marco publicitario';
                else title = `Contenido embebido ${index + 1}`;
                
                iframe.setAttribute('title', title);
                iframe.setAttribute('aria-label', title);
              });
            }, 100);
          };
          
          // Initial check when DOM is ready
          if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', window.addIframeTitles);
          } else {
            window.addIframeTitles();
          }
          
          // Optimized mutation observer for dynamic content
          window.iframeObserver = new MutationObserver((mutations) => {
            let hasNewIframes = false;
            mutations.forEach((mutation) => {
              if (mutation.type === 'childList') {
                mutation.addedNodes.forEach((node) => {
                  if (node.nodeType === 1 && (node.tagName === 'IFRAME' || node.querySelector?.('iframe'))) {
                    hasNewIframes = true;
                  }
                });
              }
            });
            if (hasNewIframes) window.addIframeTitles();
          });
          
          window.iframeObserver.observe(document.body, { childList: true, subtree: true });
        </script>
        
        <!-- Service Worker Registration - Cached -->
        <script is:inline>
          if ('serviceWorker' in navigator && !navigator.serviceWorker.controller) {
            navigator.serviceWorker.register('/sw.js').catch(() => {});
          }
        </script>
        
        <!-- Performance monitoring - Lightweight -->
        <script is:inline>
          if (typeof PerformanceObserver !== 'undefined' && typeof gtag !== 'undefined') {
            const observer = new PerformanceObserver((list) => {
              list.getEntries().forEach((entry) => {
                if (entry.entryType === 'largest-contentful-paint' && entry.startTime > 0) {
                  gtag('event', 'LCP', { value: Math.round(entry.startTime) });
                }
              });
            });
            try {
              observer.observe({ entryTypes: ['largest-contentful-paint'] });
            } catch (e) {}
          }
        </script>
        
        <!-- Google News Script - Deferred -->
        <script is:inline>
          // Load Google News script after other critical scripts
          setTimeout(() => {
            const swgScript = document.createElement('script');
            swgScript.async = true;
            swgScript.src = 'https://news.google.com/swg/js/v1/swg-basic.js';
            swgScript.onload = function() {
              try {
                (self.SWG_BASIC = self.SWG_BASIC || []).push(function(basicSubscriptions) {
                  basicSubscriptions.init({
                    type: "NewsArticle",
                    isPartOfType: ["Product"],
                    isPartOfProductId: "CAowoPTcCw:openaccess",
                    clientOptions: { theme: "light", lang: "es" },
                  });
                });
              } catch (e) {}
            };
            document.head.appendChild(swgScript);
          }, 500);
        </script>
    </body>
</html>

<style is:global>
    * {
        box-sizing: border-box;
    }
    
    :root {
        font-family: 'Onest Variable', sans-serif;
        color-scheme: dark;
    }
    
    html {
        background-color: #131313;
    }
    
    body {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        min-height: 100vh;
    }
    
    @media (min-width: 640px) {
        body {
            padding: 0 1.5rem;
        }
    }
    
    @media (min-width: 1024px) {
        body {
            padding: 0 2rem;
        }
    }
    
    @media (min-width: 1280px) {
        body {
            padding: 0;
        }
    }
    
    ::-webkit-scrollbar {
        width: 8px;
    }
    ::-webkit-scrollbar-track {
        background: transparent;
        backdrop-filter: blur(10px);
        border-radius: 5px;
    }
    ::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
        border-radius: 5px;
    }
    ::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.5);
    }
    
    /* Base paragraph styles - only apply outside of prose containers */
    body > *:not(.prose-container) p,
    main > *:not(.prose-container) p,
    section:not(.prose-container) p,
    div:not(.prose-container) p {
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.6;
        margin-bottom: 1em;
        font-weight: 100;
        font-size: 0.875rem;
        letter-spacing: 0.5px;
    }
    
    @media (min-width: 640px) {
        body > *:not(.prose-container) p,
        main > *:not(.prose-container) p,
        section:not(.prose-container) p,
        div:not(.prose-container) p {
            font-size: 1rem;
            line-height: 1.5;
        }
    }
    
    @media (min-width: 1024px) {
        body > *:not(.prose-container) p,
        main > *:not(.prose-container) p,
        section:not(.prose-container) p,
        div:not(.prose-container) p {
            line-height: 1.4;
        }
    }
    
    /* Strong text styling - apply everywhere */
    p strong {
        color: white;
        font-weight: 700;
    }
</style>